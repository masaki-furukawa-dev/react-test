{"version":3,"sources":["logo.svg","redux/store/history.js","redux/reducers/loading.js","redux/reducers/index.js","redux/store/store.js","common/containers/pages/Sample.jsx","common/containers/pages/NotFound.jsx","app/common/theme.js","app/components/atoms/Loading.jsx","Root.jsx","serviceWorker.js","index.js"],"names":["module","exports","history","createHashHistory","basename","loadingReducer","createSlice","name","initialState","reducers","set","state","action","Object","assign","payload","appReducer","combineReducers","loading","reducer","rootReducer","persistConfig","key","storage","stateReconciler","autoMergeLevel2","blacklist","persistedReducer","persistReducer","store","configureStore","middleware","thunk","persistor","persistStore","Sample","props","Body","Logo","src","logo","alt","Header","Contents","Title","Exprain","Component","connectedSample","connect","styled","div","h1","h2","NotFound","theme","createMuiTheme","spacing","palette","primary","light","main","dark","contrastText","secondary","typography","button","textTransform","MuiCheckbox","color","MuiRadio","MuiSwitch","overrides","MuiBottomNavigationAction","root","flex","label","fontSize","MuiSnackbarContent","backgroundColor","Loading","Display","LoaderA","LoaderB","LoaderC","load1","keyframes","LoaderBase","Root","useSelector","exact","path","component","display","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.9ec0cf81.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import {\n    /*createBrowserHistory,*/\n    createHashHistory\n} from 'history';\n\nconst getHistory = () => {\n    //return createBrowserHistory();\n    return createHashHistory({\n        basename: \"/\"\n    });\n}\n\nexport const history = getHistory();","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nconst loadingReducer = createSlice({\r\n    name: \"loading\",\r\n    initialState: {\r\n    },\r\n    reducers: {\r\n        set: (state, action) => {\r\n            return Object.assign({}, action.payload);\r\n        },\r\n    }\r\n});\r\n\r\nexport default loadingReducer;","import { combineReducers } from 'redux';\nimport loadingReducer from './loading';\n\nconst appReducer = combineReducers({\n  loading: loadingReducer.reducer\n});\n\nexport const blacklist = [\n];\n\n//clear all store data\nconst rootReducer = (state, action) => {\n  return appReducer(state, action);\n}\n\nexport default rootReducer;","import { configureStore } from \"@reduxjs/toolkit\";\nimport rootReducer, { blacklist } from '../reducers';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/es/stateReconciler/autoMergeLevel2';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport thunk from 'redux-thunk';\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2,\n  blacklist: blacklist,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\n// setup 関数を用意してエクスポートする。\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: [thunk],\n});\nexport const persistor = persistStore(store);\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport logo from '../../../logo.svg';\r\n\r\nclass Sample extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Body>\r\n                <Logo><img src={logo} alt=\"global bridge company\"/></Logo>\r\n                <Header>React Sample</Header>\r\n                <Contents>\r\n                <Title>はじめに</Title>\r\n                <Exprain>\r\n                    このアプリは create-react-app で作成されています。\r\n                </Exprain>\r\n                <Title>このページについて</Title>\r\n                <Exprain>\r\n                    このページはサンプルページです。<br/>\r\n                    ソースは src\\common\\containers\\pages\\Sample.jsx です。<br />\r\n                    必要に応じて変更、削除してください。\r\n                </Exprain>\r\n                <Title>フォルダ構成</Title>\r\n                <Exprain>\r\n                    atomic design を参考にしています。<br/>\r\n                    ファイルを作成する際はこの考えをもとにすると煩雑になりにくいと思われます。\r\n                </Exprain>\r\n                <Title>ルーティング</Title>\r\n                <Exprain>\r\n                    src/Root.jsx でルーティングを設定しています。\r\n                </Exprain>\r\n                <Title>データ管理</Title>\r\n                <Exprain>\r\n                    redux を使用しています。\r\n                </Exprain>\r\n                <Title>非同期処理</Title>\r\n                <Exprain>\r\n                    redux-thunk を使用しています。\r\n                </Exprain>\r\n                <Title>CSSのローカル化</Title>\r\n                <Exprain>\r\n                    styled-components を使用しています。<br/>\r\n                    書き方はこのページのソースを参考にしてください。\r\n                </Exprain>\r\n                </Contents>\r\n            </Body>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n    }\r\n};\r\n\r\nconst connectedSample = connect(mapStateToProps)(Sample);\r\nexport { connectedSample as Sample };\r\n\r\nconst Body = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n`;\r\nconst Contents = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n    flex-direction: column;\r\n    padding: 10px;\r\n`;\r\nconst Logo = styled.div`\r\n    position: fixed;\r\n    bottom: 0px;\r\n    right: 50px;\r\n    width: 300px;\r\n    height: 300px;\r\n    opacity: 0.1;\r\n`;\r\nconst Header = styled.h1`\r\n    font-size: 22px;\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n    color: #6d6d6d;\r\n    background-color: #e7fbf7;\r\n    width: 100%;\r\n    text-align: center;\r\n`;\r\nconst Title = styled.h2`\r\n    font-size: 18px;\r\n    margin: 0;\r\n    color: #000;\r\n    text-decoration: underline;\r\n`;\r\nconst Exprain = styled.div`\r\n    margin-left: 10px;\r\n    margin-bottom: 10px;\r\n    color: #333;\r\n`;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst NotFound = (props) => {\r\n    return (\r\n        <Body>\r\n            <Title>Not Found</Title>\r\n            <Contents>\r\n                ページが存在しません。<br/>\r\n                URLが正しいか確認してください。\r\n            </Contents>\r\n        </Body>\r\n    );\r\n}\r\n\r\nexport { NotFound };\r\n\r\nconst Body = styled.div`\r\n    padding: 0 20px;\r\n`;\r\nconst Title = styled.h1`\r\n    font-size: 24px;\r\n    font-weight: bold;\r\n`;\r\nconst Contents = styled.div`\r\n`;\r\n","import { createMuiTheme } from '@material-ui/core/styles';\r\nconst theme = createMuiTheme({\r\n    spacing: 8,\r\n    palette: {\r\n        primary: {\r\n            light: '#6ec6ff',\r\n            main: '#2196f3',\r\n            dark: '#0069c0',\r\n            contrastText: '#fff',\r\n        },\r\n        secondary: {\r\n            light: '#ff79b0',\r\n            main: '#ff4081',\r\n            dark: '#c60055',\r\n            contrastText: '#000',\r\n        },\r\n    },\r\n    typography: {\r\n        button: {\r\n            textTransform: \"none\"\r\n        }\r\n    },\r\n    props: {\r\n        MuiCheckbox: {\r\n            color: 'primary'\r\n        },\r\n        MuiRadio: {\r\n            color: 'primary'\r\n        },\r\n        MuiSwitch: {\r\n            color: 'primary'\r\n        },\r\n    },\r\n    overrides: {\r\n        MuiBottomNavigationAction: {\r\n            root: {\r\n                \"&.Mui-selected\": {\r\n                    flex: '2',\r\n                },\r\n            },\r\n            label: {\r\n                \"&.Mui-selected\": {\r\n                    fontSize: \"0.7rem\"\r\n                }\r\n            }\r\n        },\r\n        MuiSnackbarContent: {\r\n            root: {\r\n                backgroundColor: \"rgba(49, 49, 49, 0.8)\"\r\n            }\r\n        }\r\n    }\r\n});\r\nexport { theme };","import React from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\nconst Loading = (props) => {\r\n    return (\r\n      <Body Display={props.Display}>\r\n        <LoaderA />\r\n        <LoaderB />\r\n        <LoaderC />\r\n      </Body>\r\n    )\r\n}\r\n\r\nexport { Loading };\r\n\r\nconst Body = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgba(0, 192, 255, 0.9);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    opacity: ${props => props.Display ? 1 : 0};\r\n    pointer-events: ${props => props.Display ? \"\" : \"none\"};\r\n    transition-duration: 0.2s;\r\n    z-index: 2000;\r\n`;\r\n\r\nconst load1 = keyframes`\r\n  0%,\r\n  80%,\r\n  100% {\r\n    transform: scaleY(1);\r\n  }\r\n  40% {\r\n    transform: scaleY(1.5);\r\n  }\r\n`;\r\nconst LoaderBase = styled.div`\r\n    background: #ffffff;\r\n    -webkit-animation: ${load1} 1s infinite ease-in-out;\r\n    animation: ${load1} 1s infinite ease-in-out;\r\n    width: 1em;\r\n    height: 4em;\r\n\r\n    color: #ffffff;\r\n    margin: 0 2px;\r\n    font-size: 11px;\r\n    -webkit-transform: translateZ(0);\r\n    -ms-transform: translateZ(0);\r\n    transform: translateZ(0);\r\n`;\r\nconst LoaderA = styled(LoaderBase)`\r\n`;\r\nconst LoaderB = styled(LoaderBase)`\r\n    -webkit-animation-delay: -0.16s;\r\n    animation-delay: -0.16s;\r\n`;\r\nconst LoaderC = styled(LoaderBase)`\r\n    -webkit-animation-delay: -0.32s;\r\n    animation-delay: -0.32s;\r\n`;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { history } from './redux/store/history'\nimport { useSelector } from \"react-redux\";\nimport { Sample, NotFound } from './common/containers/pages';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { theme } from './app/common/theme.js';\n\nimport { Loading } from './app/components/atoms';\n\nconst Root = () => {\n    const loading = useSelector(state => state.loading);\n    return (\n    <Router history={history} basename=\"/\">\n        <MuiThemeProvider theme = {theme} >\n            <Switch>\n                <Route exact path='/' component={Sample} />\n                <Route component={NotFound} />\n            </Switch>\n            <Loading Display={loading.display} />\n        </MuiThemeProvider>\n    </Router>\n    );\n}\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport './index.css';\nimport Root from './Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <Root />\n        </PersistGate>\n    </Provider>,\n\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();"],"sourceRoot":""}